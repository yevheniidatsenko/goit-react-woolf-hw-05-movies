{"version":3,"file":"static/js/524.1d7aca49.chunk.js","mappings":"mMAEA,MAAMA,EAAU,mCAEhBC,EAAAA,EAAMC,SAASC,QAAU,+BAElB,MAAMC,EAAiBC,eACTJ,EAAAA,EAAAA,GAAM,6BAADK,OACON,EAAO,oBAK3BO,EAAiBF,eACTJ,EAAAA,EAAAA,GAAM,uBAADK,OACCE,EAAK,aAAAF,OAAYN,EAAO,+CAKtCS,EAAmBJ,eACXJ,EAAAA,EAAAA,GAAM,UAADK,OAAWI,EAAE,aAAAJ,OAAYN,IAItCW,EAAgBN,eACRJ,EAAAA,EAAAA,GAAM,UAADK,OAAWI,EAAE,qBAAAJ,OAAoBN,IAI9CY,EAAmBP,eACXJ,EAAAA,EAAAA,GAAM,UAADK,OAAWI,EAAE,qBAAAJ,OAAoBN,G,sGC9B3D,QAA2B,uBAA3B,EAA6D,uBAA7D,EAA+F,uBAA/F,EAAiI,uBAAjI,EAAmK,uB,aCOnK,MAuDA,EAvDaa,KACX,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACXC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MA0BnC,OAxBAG,EAAAA,EAAAA,YAAU,KACQhB,WACd,IACEiB,EAAAA,QAAQC,KAAK,CAAEC,QAAS,UACxBJ,EAAS,MACT,MAAMK,QAAad,EAAAA,EAAAA,IAAcG,GAEjC,GAA8B,IAA1BW,EAAKA,KAAKT,KAAKU,OAEjB,YADAC,EAAAA,OAAOC,KAAK,yBAIdX,EAAQQ,EAAKA,KAAKT,KACpB,CAAE,MAAOG,GACPU,QAAQV,MAAMA,GACdC,EAASD,EACX,CAAC,QACCG,EAAAA,QAAQQ,QACV,GAGFC,EAAS,GACR,CAACjB,KAGFkB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGd,IAASa,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,UAAQd,MACtBe,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBH,SAC5BjB,EAAKqB,KAAIC,IAAA,IAAC,GAAE5B,EAAE,aAAE6B,EAAY,UAAEC,EAAS,KAAEC,GAAMH,EAAA,OAC9CN,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAgBH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OACEQ,IAAG,GAAApC,QAAKqC,EAAAA,EAAAA,GAASJ,IACjBK,IAAKH,EACLI,MAAO,QACPC,OAAQ,WAEVZ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBH,UAC7BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBH,SAAEQ,OAEnCT,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAgBH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBH,SAAC,qBAChCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBH,SAAEO,SAZA9B,EAchC,QAGL,C,uCCzDGiC,EAAWI,GAAG,GAAAzC,OACtByC,EAAG,uCAAAzC,OAA0CyC,GAAG,GAAAzC,O","sources":["components/API/MoviesAPI.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Utils/checkImg.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5257856f789bada50296aabdc3a8b8f3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingDay = async () => {\n  const data = await axios(\n    `/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getSearchQuery = async query => {\n  const data = await axios(\n    `/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesCast = async id => {\n  const data = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const data = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__2oQ+0\",\"CastItem\":\"Cast_CastItem__0IPWJ\",\"CastDesc\":\"Cast_CastDesc__R1xf+\",\"CastName\":\"Cast_CastName__JwJlv\",\"CastText\":\"Cast_CastText__aRsqA\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { checkImg } from '../Utils/checkImg';\nimport { getMoviesCast } from '../API/MoviesAPI';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        Loading.dots({ svgSize: '250px' });\n        setError(null);\n        const data = await getMoviesCast(movId);\n\n        if (data.data.cast.length === 0) {\n          Notify.info('Sorry, no information');\n          return;\n        }\n\n        setCast(data.data.cast);\n      } catch (error) {\n        console.error(error);\n        setError(error);\n      } finally {\n        Loading.remove();\n      }\n    };\n\n    getCast();\n  }, [movId]);\n\n  return (\n    <div>\n      {error && <h2>error: {error}</h2>}\n      <ul className={styles.CastList}>\n        {cast.map(({ id, profile_path, character, name }) => (\n          <li className={styles.CastItem} key={id}>\n            <img\n              src={`${checkImg(profile_path)}`}\n              alt={name}\n              width={'120px'}\n              height={'170px'}\n            />\n            <li className={styles.CastDesc}>\n              <li className={styles.CastName}>{name}</li>\n            </li>\n            <ul className={styles.CastDesc}>\n              <li className={styles.CastText}>Character name:</li>\n              <li className={styles.CastName}>{character}</li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import noImg from '../Images/noImg.png';\n\nexport const checkImg = img =>\n  `${img ? `https://image.tmdb.org/t/p/original/${img}` : `${noImg}`}`;\n"],"names":["API_KEY","axios","defaults","baseURL","getTrendingDay","async","concat","getSearchQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","Cast","movId","useParams","cast","setCast","useState","error","setError","useEffect","Loading","dots","svgSize","data","length","Notify","info","console","remove","getCast","_jsxs","children","_jsx","className","styles","map","_ref","profile_path","character","name","src","checkImg","alt","width","height","img"],"sourceRoot":""}
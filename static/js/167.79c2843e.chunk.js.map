{"version":3,"file":"static/js/167.79c2843e.chunk.js","mappings":"qMACA,QAAwB,wB,aCKxB,MAoCA,EApCiBA,KACf,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAyBnC,OAvBAG,EAAAA,EAAAA,YAAU,KACRC,EAAAA,QAAQC,KAAK,CAAEC,QAAS,UACxBJ,EAAS,MACcK,WACrB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,MACnBV,EAAkBS,EAAKA,KAAKE,QAC9B,CAAE,MAAOT,GACPC,EAASD,GACTU,QAAQV,MAAMA,EAChB,CAAC,QACCG,EAAAA,QAAQQ,QACV,GAGFC,EAAgB,GACf,KAEHV,EAAAA,EAAAA,YAAU,KACOW,SAASC,cAAc,QAC/BC,MAAMC,gBAAkB,MAAM,GACpC,KAGDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SAAC,mBAC5BlB,IAASiB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,UAAQlB,KACrBH,EAAeyB,OAAS,IAAKH,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,WAAY3B,MAClD,C,mFCpCV,MAAM4B,EAAU,mCAEhBC,EAAAA,EAAMC,SAASC,QAAU,+BAElB,MAAMpB,EAAiBF,eACToB,EAAAA,EAAAA,GAAM,6BAADG,OACOJ,EAAO,oBAK3BK,EAAiBxB,eACToB,EAAAA,EAAAA,GAAM,uBAADG,OACCE,EAAK,aAAAF,OAAYJ,EAAO,+CAKtCO,EAAmB1B,eACXoB,EAAAA,EAAAA,GAAM,UAADG,OAAWI,EAAE,aAAAJ,OAAYJ,IAItCS,EAAgB5B,eACRoB,EAAAA,EAAAA,GAAM,UAADG,OAAWI,EAAE,qBAAAJ,OAAoBJ,IAI9CU,EAAmB7B,eACXoB,EAAAA,EAAAA,GAAM,UAADG,OAAWI,EAAE,qBAAAJ,OAAoBJ,G,yEC9B3D,QAAuB,6BAAvB,EAA4D,8B,aCI5D,MAoBA,EApBuBW,IAA2C,IAA1C,GAAEH,EAAE,MAAEI,EAAK,KAAEC,EAAI,QAAEC,EAAO,OAAEC,GAAQJ,EAC1D,MAAMK,GAAWC,EAAAA,EAAAA,MAEjB,OACEvB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYH,UACzBD,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,GAAE,WAAAf,OAAaI,GAAMY,MAAO,CAAEC,KAAML,GAAWvB,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACE4B,IAAG,GAAAlB,QAAKmB,EAAAA,EAAAA,GAASR,IACjBS,IAAKZ,EACLa,MAAO,QACPC,OAAQ,WAGVhC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SAAEmB,GAAgBC,IAC7CC,IAAWtB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,aAAUkC,EAAAA,EAAAA,IAAO,IAAIC,KAAKd,GAAU,uBAVtBN,EAY5B,ECpBT,EAAuB,yBCqBvB,EAnBmBG,IAAqB,IAApB,WAAEZ,GAAYY,EAChC,OACEjB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYH,SACxBM,EAAW8B,KACVC,IAAA,IAAC,GAAEtB,EAAE,MAAEI,EAAK,cAAEmB,EAAa,aAAEC,EAAY,YAAEC,GAAaH,EAAA,OACtDpC,EAAAA,EAAAA,KAACwC,EAAc,CAEb1B,GAAIA,EACJI,MAAOA,EACPC,KAAMkB,EACNjB,QAASkB,EACTjB,OAAQkB,GALHzB,EAML,KAGH,C,uCChBIe,EAAWY,GAAG,GAAA/B,OACtB+B,EAAG,uCAAA/B,OAA0C+B,GAAG,GAAA/B,O","sources":["webpack://react-homework-template/./src/Pages/HomePage/HomePage.module.css?8472","Pages/HomePage/HomePage.jsx","components/API/MoviesAPI.js","webpack://react-homework-template/./src/components/MoviesListItem/MoviesListItem.module.css?7daa","components/MoviesListItem/MoviesListItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/Utils/checkImg.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"HomePage_Title__DhbcY\"};","import { useEffect, useState } from 'react';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { getTrendingDay } from '../../components/API/MoviesAPI';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport styles from './HomePage.module.css';\n\nconst HomePage = () => {\n  const [moviesTrending, setMoviesTrending] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    Loading.dots({ svgSize: '250px' });\n    setError(null);\n    const trendingMovies = async () => {\n      try {\n        const data = await getTrendingDay();\n        setMoviesTrending(data.data.results);\n      } catch (error) {\n        setError(error);\n        console.error(error);\n      } finally {\n        Loading.remove();\n      }\n    };\n\n    trendingMovies();\n  }, []);\n\n  useEffect(() => {\n    const rootBg = document.querySelector('body');\n    rootBg.style.backgroundImage = 'none';\n  }, []);\n\n  return (\n    <div>\n      <h1 className={styles.Title}>Trending today</h1>\n      {error && <h2>Error: {error}</h2>}\n      {moviesTrending.length > 0 && <MoviesList collection={moviesTrending} />}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '5257856f789bada50296aabdc3a8b8f3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingDay = async () => {\n  const data = await axios(\n    `/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getSearchQuery = async query => {\n  const data = await axios(\n    `/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesCast = async id => {\n  const data = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const data = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"MoviesListItem_Item__F6lfL\",\"Title\":\"MoviesListItem_Title__-X1ZS\"};","import { Link, useLocation } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { checkImg } from '../Utils/checkImg';\nimport styles from './MoviesListItem.module.css';\n\nconst MoviesListItem = ({ id, title, name, release, poster }) => {\n  const location = useLocation();\n\n  return (\n    <li className={styles.Item} key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={`${checkImg(poster)}`}\n          alt={title}\n          width={'270px'}\n          height={'400px'}\n        />\n\n        <h2 className={styles.Title}>{title ? title : name}</h2>\n        {release && <p>Release: {format(new Date(release), 'dd MMMM yyyy')}</p>}\n      </Link>\n    </li>\n  );\n};\n\nexport default MoviesListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MoviesList_List__solOa\"};","import MoviesListItem from '../MoviesListItem/MoviesListItem';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ collection }) => {\n  return (\n    <ul className={styles.List}>\n      {collection.map(\n        ({ id, title, original_name, release_date, poster_path }) => (\n          <MoviesListItem\n            key={id}\n            id={id}\n            title={title}\n            name={original_name}\n            release={release_date}\n            poster={poster_path}\n          />\n        )\n      )}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import noImg from '../Images/noImg.png';\n\nexport const checkImg = img =>\n  `${img ? `https://image.tmdb.org/t/p/original/${img}` : `${noImg}`}`;\n"],"names":["HomePage","moviesTrending","setMoviesTrending","useState","error","setError","useEffect","Loading","dots","svgSize","async","data","getTrendingDay","results","console","remove","trendingMovies","document","querySelector","style","backgroundImage","_jsxs","children","_jsx","className","styles","length","MoviesList","collection","API_KEY","axios","defaults","baseURL","concat","getSearchQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","_ref","title","name","release","poster","location","useLocation","Link","to","state","from","src","checkImg","alt","width","height","format","Date","map","_ref2","original_name","release_date","poster_path","MoviesListItem","img"],"sourceRoot":""}